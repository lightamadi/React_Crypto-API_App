{"version":3,"sources":["App.js","index.js"],"names":["coinNames","COINS","App","useState","coinData","setCoinData","useEffect","fetch","then","res","json","data","filteredData","filter","ticker","includes","symbol","console","log","className","alt","src","type","placeholder","map","coin","i","Number","lastPrice","toLocaleString","style","priceChangePercent","color","rootElement","document","getElementById","createRoot","render"],"mappings":"6MAwBMA,EAAY,CAAC,UAAW,WAAY,SAAU,UAAW,YAEzDC,EAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAE5C,SAASC,IACtB,MAAgCC,mBAAS,IAAG,mBAArCC,EAAQ,KAAEC,EAAW,KAqB5B,OAnBAC,qBAAU,WACRC,MAAM,+CACHC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACG,GACL,IAAMC,EAAeD,EAAKE,QAAO,SAACC,GAChC,GAAIb,EAAMc,SAASD,EAAOE,QACxB,OAAO,CAEX,IACAC,QAAQC,IAAI,CAAEN,iBACdP,EAAYO,EACd,GACJ,GAAG,IAQD,sBAAKO,UAAU,MAAK,UAClB,gCACE,qBACEC,IAAI,OACJC,IAAI,gEAEN,uBAAOC,KAAK,OAAOC,YAAY,cAEjC,sBAAKJ,UAAU,eAAc,UAC3B,+DACA,kCACE,gCACE,+BACE,sCACA,wCACA,uCACA,4CAQJ,gCACGf,EAASoB,KAAI,SAACC,EAAMC,GACnB,OACE,+BACE,6BAAK1B,EAAU0B,KACf,6BAAKzB,EAAMyB,KACX,mCAAMC,OAAOF,EAAKG,WAAWC,oBAC7B,qBACEC,MACEH,OAAOF,EAAKM,oBAAsB,EAC9B,CAAEC,MAAO,SACT,CAAEA,MAAO,OACd,UAEAL,OAAOF,EAAKM,oBAAsB,EAAI,SAAM,SAC5CN,EAAKM,mBAAkB,SAZnBN,EAAKT,OAgBlB,SAGJ,qBAAKG,UAAU,kBAAiB,SAC9B,qBACEA,UAAU,cACVC,IAAI,OACJC,IAAI,qEAMhB,CCtGA,IAAMY,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACnC,EAAG,M","file":"static/js/main.7607f891.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\n// Use this API\n// https://api2.binance.com/api/v3/ticker/24hr\n\n// symbols we want...\n// BTCUSDT (Bitcoin)\n// ETHUSDT (Ethereum)\n// SOLUSDT (Solana)\n// ADAUSDT (Cardano)\n// DOGEUSDT (DogeCoin)\n\n/*\nconst coinNames = {\n  Bitcoin: \"BTCUSDT\", \n  Ethereum: \"ETHUSDT\", \n  Solana : \"SOLUSDT\", \n  Cardano: \"ADAUSDT\", \n  DogeCoin:\"DOGEUSDT\"\n}\n*/\n//const COINS = Object.keys(coinNames)\n\nconst coinNames = [\"Bitcoin\", \"Ethereum\", \"Solana\", \"Cardano\", \"DogeCoin\"];\n\nconst COINS = [\"BTCUSDT\", \"ETHUSDT\", \"SOLUSDT\", \"ADAUSDT\", \"DOGEUSDT\"];\n\nexport default function App() {\n  const [coinData, setCoinData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api2.binance.com/api/v3/ticker/24hr\")\n      .then((res) => res.json())\n      .then((data) => {\n        const filteredData = data.filter((ticker) => {\n          if (COINS.includes(ticker.symbol)) {\n            return true;\n          }\n        });\n        console.log({ filteredData });\n        setCoinData(filteredData);\n      });\n  }, []);\n  // 1. STATE AND USEEFFECT HERE\n\n  // 2. How will you \"Pull out\" the symbols we need?\n\n  // 3. ...and then store them in state?\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <img\n          alt=\"logo\"\n          src=\"https://assets.codepen.io/6060109/crypto-logo-secondary.png\"\n        />\n        <input type=\"text\" placeholder=\"Search\" />\n      </nav>\n      <div className=\"main-content\">\n        <h2>Today's cryptocurrency prices</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Symbol</th>\n              <th>Price</th>\n              <th>24h %</th>\n            </tr>\n          </thead>\n          {/* 3. Display data here... */}\n          {/* HINT: Map to JSX */}\n\n          {/* Up? Green + ▲ */}\n          {/* Down? Red + c */}\n          <tbody>\n            {coinData.map((coin, i) => {\n              return (\n                <tr key={coin.symbol}>\n                  <td>{coinNames[i]}</td>\n                  <td>{COINS[i]}</td>\n                  <td>${Number(coin.lastPrice).toLocaleString()}</td>\n                  <td\n                    style={\n                      Number(coin.priceChangePercent) > 0\n                        ? { color: \"green\" }\n                        : { color: \"red\" }\n                    }\n                  >\n                    {Number(coin.priceChangePercent) > 0 ? \"▲\" : \"▼\"}\n                    {coin.priceChangePercent}%\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"bottom-logo-ctr\">\n          <img\n            className=\"bottom-logo\"\n            alt=\"logo\"\n            src=\"https://assets.codepen.io/6060109/crypto-logo-primary.png\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}